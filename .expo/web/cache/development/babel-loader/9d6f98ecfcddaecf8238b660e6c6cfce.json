{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\n\nvar Authentication = function Authentication() {\n  var container = styles.container,\n      topImage = styles.topImage,\n      formContainer = styles.formContainer;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var disableButtons = !email || !password;\n\n  var login = function login() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      console.log(userCredential);\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return _jsxs(View, {\n    style: container,\n    children: [_jsx(Image, {\n      style: topImage,\n      source: require(\"../../assets/helpearn.jpeg\")\n    }), _jsxs(View, {\n      style: formContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: login,\n        activeOpacity: 0.8,\n        disabled: disableButtons,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontStyle: \"bold\"\n          },\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, styles.registerButton],\n        onPress: login,\n        activeOpacity: 0.8,\n        disabled: disableButtons,\n        children: _jsx(Text, {\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    alignItems: \"center\"\n  },\n  topImage: {\n    height: 800,\n    width: 500\n  },\n  input: {\n    height: 50,\n    borderRadius: 15,\n    backgroundColor: \"white\",\n    margin: 12,\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    width: \"100%\"\n  },\n  registerButton: {\n    backgroundColor: \"#0080ff\",\n    marginTop: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: \"\"\n  },\n  button: {\n    height: 50,\n    width: 160,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffbf00\",\n    textDecorationColor: \"white\"\n  },\n  formContainer: {\n    textAlign: \"center\",\n    alignContent: \"center\",\n    top: 0,\n    bottom: 0,\n    right: 50,\n    left: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"transparent\"\n  }\n});\nexport default Authentication;","map":{"version":3,"sources":["/Users/mohitharshan/Desktop/helpearn/helpearnreactnative/src/pages/Authentication/index.tsx"],"names":["getAuth","signInWithEmailAndPassword","useState","auth","Authentication","container","styles","topImage","formContainer","email","setEmail","password","setPassword","disableButtons","login","then","userCredential","console","log","user","catch","error","errorCode","code","errorMessage","message","require","input","button","color","fontStyle","registerButton","StyleSheet","create","position","alignItems","height","width","borderRadius","backgroundColor","margin","borderWidth","paddingHorizontal","paddingVertical","marginTop","buttonText","fontSize","fontWeight","justifyContent","textDecorationColor","textAlign","alignContent","top","bottom","right","left"],"mappings":"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","sourcesContent":["import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\n\nconst auth = getAuth();\n\nconst Authentication: React.FC<{}> = () => {\n  const { container, topImage, formContainer } = styles;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const disableButtons = !email || !password;\n\n  const login = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        console.log(userCredential);\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  return (\n    <View style={container}>\n      <Image style={topImage} source={require(\"../../assets/helpearn.jpeg\")} />\n      <View style={formContainer}>\n        <TextInput\n          style={styles.input}\n          onChangeText={setEmail}\n          value={email}\n          placeholder=\"Email\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          placeholder=\"Password\"\n          autoCapitalize={\"none\"}\n          keyboardType=\"default\"\n          secureTextEntry\n        />\n        <TouchableOpacity\n          style={styles.button}\n          onPress={login}\n          activeOpacity={0.8}\n          disabled={disableButtons}\n        >\n          <Text style={{ color: \"white\", fontStyle: \"bold\" }}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.button, styles.registerButton]}\n          onPress={login}\n          activeOpacity={0.8}\n          disabled={disableButtons}\n        >\n          <Text>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    alignItems: \"center\",\n  },\n  topImage: {\n    height: 800,\n    width: 500,\n  },\n  input: {\n    height: 50,\n    borderRadius: 15,\n    backgroundColor: \"white\",\n    margin: 12,\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    width: \"100%\",\n  },\n  registerButton: { backgroundColor: \"#0080ff\", marginTop: 20 },\n  buttonText:{fontSize:20, fontWeight:\"\"},\n  button: {\n    height: 50,\n    width: 160,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffbf00\",\n    textDecorationColor: \"white\",\n  },\n\n  formContainer: {\n    textAlign: \"center\",\n    alignContent: \"center\",\n    top: 0,\n    bottom: 0,\n    right: 50,\n    left: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n  },\n});\n\nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}