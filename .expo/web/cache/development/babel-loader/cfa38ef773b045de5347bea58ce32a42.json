{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Firebase from \"../../firebase\";\nvar load = Firebase.auth();\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MainLayout from \"../../components/Common/MainLayout\";\nimport LargeText from \"../../components/Text/LargeText\";\nimport Input from \"../../components/Input\";\nimport { HEIGHT } from \"../../styles/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\n\nvar Authentication = function Authentication(_ref) {\n  var navigation = _ref.navigation;\n  onAuthStateChanged(auth, function (user) {\n    if (user != null) {\n      navigation.navigate(\"Home\");\n    }\n  });\n  var container = styles.container,\n      topImage = styles.topImage,\n      formContainer = styles.formContainer;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var disableButtons = !email || !password;\n\n  var login = function login() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      console.log(userCredential);\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  var register = function register() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      console.log(userCredential);\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return _jsx(MainLayout, {\n    layoutStyle: styles.container,\n    children: _jsxs(View, {\n      style: formContainer,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(LargeText, {\n          children: \"Welcome!\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Sign in to Continue\"\n        })]\n      }), _jsx(Input, {\n        icon: null,\n        placeholder: \"Enter email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: login,\n        activeOpacity: 0.8,\n        disabled: disableButtons,\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, styles.registerButton],\n        onPress: register,\n        activeOpacity: 0.8,\n        disabled: disableButtons,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Register\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 28\n  },\n  header: {\n    marginTop: 10\n  },\n  subtitle: {\n    color: \"#96A7AF\",\n    fontSize: 24\n  },\n  formContainer: {\n    marginTop: 0.2 * HEIGHT,\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\"\n  },\n  input: {\n    height: 60,\n    borderRadius: 15,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    color: \"#96A7AF\"\n  },\n  registerButton: {\n    backgroundColor: \"#800000\",\n    marginTop: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"white\"\n  },\n  button: {\n    height: 50,\n    width: 160,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffe6e6\"\n  }\n});\nexport default Authentication;","map":{"version":3,"sources":["/Users/mohitharshan/Desktop/helpearn/helpearnreactnative/src/pages/Authentication/index.tsx"],"names":["Firebase","load","auth","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","useState","MainLayout","LargeText","Input","HEIGHT","Authentication","navigation","user","navigate","container","styles","topImage","formContainer","email","setEmail","password","setPassword","disableButtons","login","then","userCredential","console","log","catch","error","errorCode","code","errorMessage","message","register","header","subtitle","input","button","registerButton","buttonText","StyleSheet","create","flex","padding","marginTop","color","fontSize","alignItems","backgroundColor","height","borderRadius","paddingHorizontal","paddingVertical","width","justifyContent"],"mappings":"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","sourcesContent":["import Firebase from \"../../firebase\";\nconst load = Firebase.auth();\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport MainLayout from \"../../components/Common/MainLayout\";\nimport ProfileIcon from \"../../assets/icons/ProfileIcon.svg\";\n\nimport LargeText from \"../../components/Text/LargeText\";\nimport Input from \"../../components/Input\";\nimport { HEIGHT, WIDTH } from \"../../styles/utils\";\n\nconst auth = getAuth();\n\nconst Authentication: React.FC<{}> = ({ navigation }) => {\n  onAuthStateChanged(auth, (user) => {\n    if (user != null) {\n      navigation.navigate(\"Home\");\n    }\n\n    // Do other things\n  });\n  const { container, topImage, formContainer } = styles;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const disableButtons = !email || !password;\n\n  const login = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        console.log(userCredential);\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  const register = () => {\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        console.log(userCredential);\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  return (\n    <MainLayout layoutStyle={styles.container}>\n      <View style={formContainer}>\n        <View style={styles.header}>\n          <LargeText>Welcome!</LargeText>\n          <Text style={styles.subtitle}>Sign in to Continue</Text>\n        </View>\n        <Input icon={null} placeholder={\"Enter email\"} />\n\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          placeholder=\"Password\"\n          autoCapitalize={\"none\"}\n          keyboardType=\"default\"\n          secureTextEntry\n        />\n        <TouchableOpacity\n          style={styles.button}\n          onPress={login}\n          activeOpacity={0.8}\n          disabled={disableButtons}\n        >\n          <Text>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.button, styles.registerButton]}\n          onPress={register}\n          activeOpacity={0.8}\n          disabled={disableButtons}\n        >\n          <Text style={styles.buttonText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </MainLayout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 28,\n  },\n  header: { marginTop: 10 },\n  subtitle: { color: \"#96A7AF\", fontSize: 24 },\n  formContainer: {\n    marginTop: 0.2 * HEIGHT,\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n  },\n  input: {\n    height: 60,\n    borderRadius: 15,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    color: \"#96A7AF\",\n  },\n  registerButton: { backgroundColor: \"#800000\", marginTop: 20 },\n  buttonText: { fontSize: 20, color: \"white\" },\n  button: {\n    height: 50,\n    width: 160,\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffe6e6\",\n  },\n});\n\nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}