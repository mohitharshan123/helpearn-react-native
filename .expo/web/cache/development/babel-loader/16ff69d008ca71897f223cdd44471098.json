{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors } from \"../../styles/colors\";\nimport { WIDTH } from \"../../styles/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Input = function Input(props) {\n  var Icon = props.Icon;\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(Icon, {}), _jsx(TextInput, _objectSpread({\n      style: styles.input,\n      onChangeText: props.onChangeText,\n      value: props.value,\n      placeholder: props.placeholder,\n      placeholderTextColor: colors.dark.text.prinmary,\n      selectionColor: colors.dark.text.prinmary\n    }, props))]\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 30\n  },\n  input: {\n    marginLeft: 10,\n    color: \"#96A7AF\",\n    fontSize: 18,\n    width: 0.7 * WIDTH,\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1\n  }\n});\nexport default Input;","map":{"version":3,"sources":["/Users/mohitharshan/Desktop/helpearn/helpearnreactnative/src/components/Input/index.tsx"],"names":["React","colors","WIDTH","Input","props","Icon","styles","inputContainer","input","onChangeText","value","placeholder","dark","text","prinmary","StyleSheet","create","display","flexDirection","marginTop","marginLeft","color","fontSize","width","borderBottomColor","borderBottomWidth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAmC,OAAnC;;;;AAGA,SAASC,MAAT;AACA,SAASC,KAAT;;;;AAMA,IAAMC,KAAoB,GAAG,SAAvBA,KAAuB,CAACC,KAAD,EAAuB;AAClD,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA,eACE,KAAC,IAAD,KADF,EAEE,KAAC,SAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,MAAA,YAAY,EAAEJ,KAAK,CAACK,YAFtB;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACO,WAJrB;AAKE,MAAA,oBAAoB,EAAEV,MAAM,CAACW,IAAP,CAAYC,IAAZ,CAAiBC,QALzC;AAME,MAAA,cAAc,EAAEb,MAAM,CAACW,IAAP,CAAYC,IAAZ,CAAiBC;AANnC,OAOMV,KAPN,EAFF;AAAA,IADF;AAcD,CAhBD;;AAkBA,IAAME,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,cAAc,EAAE;AACdU,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,aAAa,EAAE,KAFD;AAGdC,IAAAA,SAAS,EAAE;AAHG,GADe;AAM/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,KAAK,EAAE,MAAMrB,KAJR;AAKLsB,IAAAA,iBAAiB,EAAE,OALd;AAMLC,IAAAA,iBAAiB,EAAE;AANd;AANwB,CAAlB,CAAf;AAgBA,eAAetB,KAAf","sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport { ComponentType } from \"react\";\nimport { TextInput, StyleSheet, TextInputProps, View } from \"react-native\";\nimport { colors } from \"../../styles/colors\";\nimport { WIDTH } from \"../../styles/utils\";\n\ninterface InputProps extends TextInputProps {\n  Icon?: any;\n}\n\nconst Input: React.FC<any> = (props: InputProps) => {\n  const Icon = props.Icon;\n  return (\n    <View style={styles.inputContainer}>\n      <Icon />\n      <TextInput\n        style={styles.input}\n        onChangeText={props.onChangeText}\n        value={props.value}\n        placeholder={props.placeholder}\n        placeholderTextColor={colors.dark.text.prinmary}\n        selectionColor={colors.dark.text.prinmary}\n        {...props}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 30,\n  },\n  input: {\n    marginLeft: 10,\n    color: \"#96A7AF\",\n    fontSize: 18,\n    width: 0.7 * WIDTH,\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}