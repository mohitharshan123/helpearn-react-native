{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\n\nvar Authentication = function Authentication() {\n  var container = styles.container,\n      topImage = styles.topImage,\n      formContainer = styles.formContainer;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var login = function login() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      console.log(userCredential);\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: container,\n    children: [_jsx(Image, {\n      style: topImage,\n      source: require(\"../../assets/helpearn.jpeg\")\n    }), _jsxs(View, {\n      style: formContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: login,\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    flex: 1\n  },\n  topImage: {\n    height: 800,\n    width: 500,\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 50,\n    borderRadius: 15,\n    backgroundColor: \"white\",\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\"\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    height: 50,\n    width: 160\n  },\n  formContainer: {\n    flex: 1,\n    left: \"50%\",\n    righ: \"50%\",\n    position: \"absolute\",\n    backgroundColor: \"transparent\"\n  }\n});\nexport default Authentication;","map":{"version":3,"sources":["/Users/mohitharshan/Desktop/helpearn/helpearnreactnative/src/pages/Authentication/index.tsx"],"names":["getAuth","signInWithEmailAndPassword","useState","auth","Authentication","container","styles","topImage","formContainer","email","setEmail","password","setPassword","login","then","userCredential","console","log","user","catch","error","errorCode","code","errorMessage","message","require","input","loginButton","StyleSheet","create","position","flex","height","width","justifyContent","borderRadius","backgroundColor","margin","borderWidth","padding","left","righ"],"mappings":"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","sourcesContent":["import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  KeyboardAvoidingView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nconst auth = getAuth();\n\nconst Authentication: React.FC<{}> = () => {\n  const { container, topImage, formContainer } = styles;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        console.log(userCredential);\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  return (\n    <KeyboardAvoidingView style={container}>\n      <Image style={topImage} source={require(\"../../assets/helpearn.jpeg\")} />\n      <View style={formContainer}>\n        <TextInput\n          style={styles.input}\n          onChangeText={setEmail}\n          value={email}\n          placeholder=\"Email\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          placeholder=\"Password\"\n          keyboardType=\"numeric\"\n        />\n        <TouchableOpacity style={styles.loginButton} onPress={login}>\n          <Text>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    flex: 1,\n  },\n  topImage: {\n    height: 800,\n    width: 500,\n    justifyContent: \"center\",\n  },\n  input: {\n    height: 50,\n    borderRadius: 15,\n    backgroundColor: \"white\",\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: \"100%\",\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    height: 50,\n    width: 160,\n  },\n\n  formContainer: {\n    flex: 1,\n    left: \"50%\",\n    righ: \"50%\",\n    position: \"absolute\",\n    backgroundColor: \"transparent\",\n  },\n});\n\nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}